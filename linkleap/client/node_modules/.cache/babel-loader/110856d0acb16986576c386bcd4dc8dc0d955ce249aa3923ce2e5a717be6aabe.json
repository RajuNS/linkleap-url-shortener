{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nelap\\\\Downloads\\\\linkleap\\\\linkleap\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport AuthContext from '../context/AuthContext';\nimport { Spinner, Center } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n\n  // A simple check for the token. In a real app, you might have a 'loading' state.\n  if (token && !user) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this); // Show loading while user data is fetched\n  }\n  return user ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 19\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 32\n  }, this);\n};\n_s(ProtectedRoute, \"1jJScfaxWHTRHouDpXq1JmRURRc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","AuthContext","Spinner","Center","jsxDEV","_jsxDEV","ProtectedRoute","_s","user","token","h","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/nelap/Downloads/linkleap/linkleap/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { Spinner, Center } from '@chakra-ui/react';\r\n\r\nconst ProtectedRoute = () => {\r\n    const { user, token } = useContext(AuthContext);\r\n    \r\n    // A simple check for the token. In a real app, you might have a 'loading' state.\r\n    if (token && !user) {\r\n        return <Center h=\"100vh\"><Spinner /></Center>; // Show loading while user data is fetched\r\n    }\r\n\r\n    return user ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,OAAO,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;;EAE/C;EACA,IAAIQ,KAAK,IAAI,CAACD,IAAI,EAAE;IAChB,oBAAOH,OAAA,CAACF,MAAM;MAACO,CAAC,EAAC,OAAO;MAAAC,QAAA,eAACN,OAAA,CAACH,OAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,CAAC,CAAC;EACnD;EAEA,OAAOP,IAAI,gBAAGH,OAAA,CAACL,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGV,OAAA,CAACN,QAAQ;IAACiB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvD,CAAC;AAACR,EAAA,CATID,cAAc;AAAAW,EAAA,GAAdX,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}