{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nelap\\\\Downloads\\\\linkleap\\\\linkleap\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      // You could add a call here to a '/api/auth/me' endpoint\n      // to verify the token and get fresh user data on app load.\n      // For simplicity, we'll decode the user from localStorage.\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        setUser(JSON.parse(storedUser));\n      }\n    }\n  }, [token]);\n  const login = (userData, userToken) => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', userToken);\n    setUser(userData);\n    setToken(userToken);\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    setUser(null);\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Z6Vnyj+tvkpOopJdPBR2TDv1n60=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","storedUser","JSON","parse","login","userData","userToken","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nelap/Downloads/linkleap/linkleap/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            // You could add a call here to a '/api/auth/me' endpoint\r\n            // to verify the token and get fresh user data on app load.\r\n            // For simplicity, we'll decode the user from localStorage.\r\n            const storedUser = localStorage.getItem('user');\r\n            if (storedUser) {\r\n                setUser(JSON.parse(storedUser));\r\n            }\r\n        }\r\n    }, [token]);\r\n\r\n    const login = (userData, userToken) => {\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        localStorage.setItem('token', userToken);\r\n        setUser(userData);\r\n        setToken(userToken);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        setToken(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjEZ,SAAS,CAAC,MAAM;IACZ,IAAIS,KAAK,EAAE;MACP;MACA;MACA;MACA,MAAMI,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAIC,UAAU,EAAE;QACZL,OAAO,CAACM,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;MACnC;IACJ;EACJ,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMO,KAAK,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IACnCP,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACH,QAAQ,CAAC,CAAC;IACtDN,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;IACxCV,OAAO,CAACS,QAAQ,CAAC;IACjBP,QAAQ,CAACQ,SAAS,CAAC;EACvB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBV,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;IAC/BX,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCd,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEE,KAAK;MAAEO,KAAK;MAAEK;IAAO,CAAE;IAAAhB,QAAA,EACvDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACtB,EAAA,CAnCWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAqCzB,eAAeD,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}